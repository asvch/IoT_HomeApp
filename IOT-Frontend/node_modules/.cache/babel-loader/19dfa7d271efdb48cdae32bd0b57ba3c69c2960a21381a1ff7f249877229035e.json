{"ast":null,"code":"var _jsxFileName = \"/Users/ratishkumarsaravanan/Desktop/IOT_latest/iot-app/mqtt-dashboard/src/TemperatureWidget.js\";\nimport React from 'react';\nimport './TemperatureWidget.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TemperatureWidget({\n  temperature\n}) {\n  // set scaling for the incoming temperature value between 0 to 100\n  const setScaledtemp = Math.min(Math.max(temperature, 0), 100);\n  const mHeight = setScaledtemp + '%'; //append with a %\n\n  // setting the thresholds for the temperature color notification\n  let setBarcolor;\n  if (setScaledtemp < 33) {\n    setBarcolor = \"#00aaff\"; // Blue for cold temps\n  } else if (setScaledtemp < 80) {\n    setBarcolor = \"#00cc66\"; // Green for moderate temps\n  } else {\n    setBarcolor = \"#ff3300\"; // Red for hot temps\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"temp-comp\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"temp-title\",\n      children: \"Temperature\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"widget\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"widget-fill\",\n        style: {\n          height: mHeight,\n          backgroundColor: setBarcolor\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"widget-label\",\n        children: [temperature, \" F\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '60px',\n        fontWeight: 'bold'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_c = TemperatureWidget;\nexport default TemperatureWidget;\nvar _c;\n$RefreshReg$(_c, \"TemperatureWidget\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","TemperatureWidget","temperature","setScaledtemp","Math","min","max","mHeight","setBarcolor","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","height","backgroundColor","marginTop","fontWeight","_c","$RefreshReg$"],"sources":["/Users/ratishkumarsaravanan/Desktop/IOT_latest/iot-app/mqtt-dashboard/src/TemperatureWidget.js"],"sourcesContent":["import React from 'react';\nimport './TemperatureWidget.css';\n\nfunction TemperatureWidget({ temperature }) {\n  // set scaling for the incoming temperature value between 0 to 100\n  const setScaledtemp = Math.min(Math.max(temperature, 0), 100);\n  const mHeight = setScaledtemp + '%';//append with a %\n  \n  // setting the thresholds for the temperature color notification\n  let setBarcolor;\n  if (setScaledtemp < 33) {\n    setBarcolor = \"#00aaff\"; // Blue for cold temps\n  } else if (setScaledtemp < 80) {\n    setBarcolor = \"#00cc66\"; // Green for moderate temps\n  } else {\n    setBarcolor = \"#ff3300\"; // Red for hot temps\n  }\n\n  return (\n    <div className=\"temp-comp\">\n      <h3 className=\"temp-title\">Temperature</h3>\n      <div className=\"widget\">\n        <div\n          className=\"widget-fill\"\n          style={{\n            height: mHeight,\n            backgroundColor: setBarcolor,\n          }}\n        />\n        <div className=\"widget-label\">\n          {temperature} F\n        </div>\n      </div>\n      <div style={{ marginTop: '60px', fontWeight: 'bold' }}>\n      </div>\n    </div>\n  );\n}\n\nexport default TemperatureWidget;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,SAASC,iBAAiBA,CAAC;EAAEC;AAAY,CAAC,EAAE;EAC1C;EACA,MAAMC,aAAa,GAAGC,IAAI,CAACC,GAAG,CAACD,IAAI,CAACE,GAAG,CAACJ,WAAW,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC;EAC7D,MAAMK,OAAO,GAAGJ,aAAa,GAAG,GAAG,CAAC;;EAEpC;EACA,IAAIK,WAAW;EACf,IAAIL,aAAa,GAAG,EAAE,EAAE;IACtBK,WAAW,GAAG,SAAS,CAAC,CAAC;EAC3B,CAAC,MAAM,IAAIL,aAAa,GAAG,EAAE,EAAE;IAC7BK,WAAW,GAAG,SAAS,CAAC,CAAC;EAC3B,CAAC,MAAM;IACLA,WAAW,GAAG,SAAS,CAAC,CAAC;EAC3B;EAEA,oBACER,OAAA;IAAKS,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBV,OAAA;MAAIS,SAAS,EAAC,YAAY;MAAAC,QAAA,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3Cd,OAAA;MAAKS,SAAS,EAAC,QAAQ;MAAAC,QAAA,gBACrBV,OAAA;QACES,SAAS,EAAC,aAAa;QACvBM,KAAK,EAAE;UACLC,MAAM,EAAET,OAAO;UACfU,eAAe,EAAET;QACnB;MAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACFd,OAAA;QAAKS,SAAS,EAAC,cAAc;QAAAC,QAAA,GAC1BR,WAAW,EAAC,IACf;MAAA;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACNd,OAAA;MAAKe,KAAK,EAAE;QAAEG,SAAS,EAAE,MAAM;QAAEC,UAAU,EAAE;MAAO;IAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACM,EAAA,GAlCQnB,iBAAiB;AAoC1B,eAAeA,iBAAiB;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}