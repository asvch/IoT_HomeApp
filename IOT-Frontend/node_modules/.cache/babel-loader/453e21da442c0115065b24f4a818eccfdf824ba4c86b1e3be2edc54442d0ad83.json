{"ast":null,"code":"var _jsxFileName = \"/Users/ratishkumarsaravanan/Desktop/IOT_latest/iot-app/mqtt-dashboard/src/FanWidget.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FanWidget({\n  status,\n  percent\n}) {\n  _s();\n  const [rotation, setRotation] = useState(0);\n  const speedRef = useRef(360); // Full speed in degrees per second\n  const requestRef = useRef();\n  const previousTimeRef = useRef();\n  const statusRef = useRef(status);\n\n  // Update statusRef and reset speed when fan turns on.\n  useEffect(() => {\n    statusRef.current = status;\n    if (status === 'on') {\n      speedRef.current = 360;\n    }\n  }, [status]);\n  const animate = time => {\n    if (previousTimeRef.current != null) {\n      const deltaTime = time - previousTimeRef.current;\n      // Update rotation based on the current speed\n      setRotation(prevRotation => (prevRotation + speedRef.current * (deltaTime / 1000)) % 360);\n\n      // If the fan is off, gradually decelerate.\n      if (statusRef.current === 'off') {\n        speedRef.current = speedRef.current * 0.98;\n        if (speedRef.current < 1) {\n          speedRef.current = 0;\n        }\n      }\n    }\n    previousTimeRef.current = time;\n    requestRef.current = requestAnimationFrame(animate);\n  };\n\n  // Start the animation loop once on mount.\n  useEffect(() => {\n    requestRef.current = requestAnimationFrame(animate);\n    return () => cancelAnimationFrame(requestRef.current);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        marginBottom: '10px',\n        fontFamily: 'Arial, sans-serif'\n      },\n      children: \"Fan Status\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        margin: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '120px',\n          height: '120px',\n          border: '4px solid #333',\n          borderRadius: '50%',\n          display: 'inline-block',\n          transform: `rotate(${rotation}deg)`\n        },\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          width: \"120\",\n          height: \"120\",\n          viewBox: \"0 0 120 120\",\n          children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n            cx: \"60\",\n            cy: \"60\",\n            r: \"55\",\n            stroke: \"#333\",\n            strokeWidth: \"4\",\n            fill: \"none\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n            fill: \"#ccc\",\n            stroke: \"#333\",\n            strokeWidth: \"1\",\n            children: [/*#__PURE__*/_jsxDEV(\"g\", {\n              id: \"blade\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M60,60 L60,20 A20,20 0 0,1 80,40 Z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"use\", {\n              href: \"#blade\",\n              transform: \"rotate(0,60,60)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"use\", {\n              href: \"#blade\",\n              transform: \"rotate(90,60,60)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"use\", {\n              href: \"#blade\",\n              transform: \"rotate(180,60,60)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"use\", {\n              href: \"#blade\",\n              transform: \"rotate(270,60,60)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n            cx: \"60\",\n            cy: \"60\",\n            r: \"5\",\n            fill: \"#333\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '10px',\n          fontWeight: 'bold'\n        },\n        children: status.toUpperCase()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fan-percentage\",\n        children: [\"Usage: \", percent, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(FanWidget, \"ZY2Q5MEW5/TcEmA7hMyE4O5V7f8=\");\n_c = FanWidget;\nexport default FanWidget;\nvar _c;\n$RefreshReg$(_c, \"FanWidget\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","FanWidget","status","percent","_s","rotation","setRotation","speedRef","requestRef","previousTimeRef","statusRef","current","animate","time","deltaTime","prevRotation","requestAnimationFrame","cancelAnimationFrame","style","textAlign","children","marginBottom","fontFamily","fileName","_jsxFileName","lineNumber","columnNumber","margin","width","height","border","borderRadius","display","transform","viewBox","cx","cy","r","stroke","strokeWidth","fill","id","d","href","marginTop","fontWeight","toUpperCase","className","_c","$RefreshReg$"],"sources":["/Users/ratishkumarsaravanan/Desktop/IOT_latest/iot-app/mqtt-dashboard/src/FanWidget.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\n\nfunction FanWidget({ status, percent }) {\n  const [rotation, setRotation] = useState(0);\n  const speedRef = useRef(360); // Full speed in degrees per second\n  const requestRef = useRef();\n  const previousTimeRef = useRef();\n  const statusRef = useRef(status);\n\n  // Update statusRef and reset speed when fan turns on.\n  useEffect(() => {\n    statusRef.current = status;\n    if (status === 'on') {\n      speedRef.current = 360;\n    }\n  }, [status]);\n\n  const animate = (time) => {\n    if (previousTimeRef.current != null) {\n      const deltaTime = time - previousTimeRef.current;\n      // Update rotation based on the current speed\n      setRotation((prevRotation) => (prevRotation + speedRef.current * (deltaTime / 1000)) % 360);\n      \n      // If the fan is off, gradually decelerate.\n      if (statusRef.current === 'off') {\n        speedRef.current = speedRef.current * 0.98;\n        if (speedRef.current < 1) {\n          speedRef.current = 0;\n        }\n      }\n    }\n    previousTimeRef.current = time;\n    requestRef.current = requestAnimationFrame(animate);\n  };\n\n  // Start the animation loop once on mount.\n  useEffect(() => {\n    requestRef.current = requestAnimationFrame(animate);\n    return () => cancelAnimationFrame(requestRef.current);\n  }, []);\n\n  return (\n    <div style={{ textAlign: 'center' }}>\n      <h3 style={{ marginBottom: '10px', fontFamily: 'Arial, sans-serif' }}>\n        Fan Status\n      </h3>\n      <div style={{ textAlign: 'center', margin: '20px' }}>\n        <div\n          style={{\n            width: '120px',\n            height: '120px',\n            border: '4px solid #333',\n            borderRadius: '50%',\n            display: 'inline-block',\n            transform: `rotate(${rotation}deg)`,\n          }}\n        >\n          <svg width=\"120\" height=\"120\" viewBox=\"0 0 120 120\">\n            {/* Outer circle */}\n            <circle cx=\"60\" cy=\"60\" r=\"55\" stroke=\"#333\" strokeWidth=\"4\" fill=\"none\" />\n            {/* Fan blades group */}\n            <g fill=\"#ccc\" stroke=\"#333\" strokeWidth=\"1\">\n              {/* Blade template */}\n              <g id=\"blade\">\n                <path d=\"M60,60 L60,20 A20,20 0 0,1 80,40 Z\" />\n              </g>\n              {/* Clone and rotate the blade for 4 blades */}\n              <use href=\"#blade\" transform=\"rotate(0,60,60)\" />\n              <use href=\"#blade\" transform=\"rotate(90,60,60)\" />\n              <use href=\"#blade\" transform=\"rotate(180,60,60)\" />\n              <use href=\"#blade\" transform=\"rotate(270,60,60)\" />\n            </g>\n            {/* Center hub */}\n            <circle cx=\"60\" cy=\"60\" r=\"5\" fill=\"#333\" />\n          </svg>\n        </div>\n        <div style={{ marginTop: '10px', fontWeight: 'bold' }}>\n          {status.toUpperCase()}\n        </div>\n        {/* Added usage with percent value */}\n        <div className=\"fan-percentage\">\n          Usage: {percent}%\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default FanWidget;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}